QGIS Server OAUTH2 plugin
=========================

This is an highly experimental proof-of-concept plugin for *QGIS Server*
that protects the server using *OAuth2* for authorization (and delegated
authentication).

Currently supported Authorization Services
------------------------------------------

Twitter
.......

Twitter Authorization Service supports **Authorization Code Grant**, the
`access_token` is sent back to the User-Agent in the query string and it's
used as a session identifier.

The `access_token` is cached in-memory in the server plugin and does not
expire.

**Required configuration**:

* `OAUTH2_CLIENT_ID`
* `OAUTH2_CLIENT_SECRET`

For Twitter Authorization Services you'll need the client ID and the secret
generated by: https://apps.twitter.com/


Auth0
.....


**Required configuration**:

* `AUTH0_DOMAIN`
* `AUTH0_CLIENT_ID`
* `AUTH0_CLIENT_SECRET`


Configuration
-------------

See the file `settings.py`.

The configuration variables can be set in a `.env` file or passed from
the environment.

.. warning::

    Other provider may need additional configuration, see notes in the provider section.

Testing
-------

A convenience wrapper script for QGIS Server is provided in the root directory
and can be used to debug the plugin.

Example run::

     OAUTH2_CLIENT_ID=***** OAUTH2_CLIENT_SECRET=********* QGIS_SERVER_LOG_FILE=/tmp/qgis.log QGIS_SERVER_LOG_LEVEL=0 python qgis_wrapped_server.py | tee | tail -f /tmp/qgis.log
